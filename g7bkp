#!/bin/bash

# Para baixar o Projeto digite
# git clone https://github.com/AlunoTADS/SO.git

####################################
#  Variaveis de Configuração
# default. Podem ser modificadas 
# pelo programador de acordo com
# o uso mais frequente do programa

logfile=.g7bkp.log
src=$(pwd)
dest=~/bkp
tp="tot"
act="sync"
rec="--recursive"
file=""


inst(){
  cp --preserve g7bkp /bin
}

run(){
  # Cria a pasta para backup
  mkdir $dest &>/dev/null
  
  local opt="" # variavel utilizada para configurar a transferencia

  ##########################################
  #  Se o usuario definir apenas um arquivo
  if [ ! $arq = "" ]; then
    opt="$opt --exclude='*' --include='$arq'"
  fi

  ###################################
  # Configura o tipo da transferencia
  
  if [ $tp == "tot" ]; then
    #  Se o bacukp/restore for total então configura 
    # para deletar os arquivos que não estiverem
    # no diretorio fonte 
    opt="$opt --delete"
    
  elif [ $tp == "comp" ]; then
    #  Se o bacukp/restore for complementar então configura 
    # para ignorar os arquivos que ja foram gravados anteriormente
    opt="$opt --ignore-existing"
    
  elif [ $tp == "dif" ]; then
    #  Se o bacukp/restore for diferencial então configura 
    # para transferir apenas os arquivos que 
    # ja foram gravados anteriormente
    opt="$opt --existing"    
  fi
  
  
	
  #####################################
  # Configura o fluxo da transferencia
  
  if [ $act == "sync" ]; then
    #  Se for syncronização, roda o programa nos dois sentidos pegando
    # apenas os arquivos mais recentes e 
    rsync -auv --relative $src/ $dest/
    rsync -auv $dest/$src/ $src/

    
  #  Se for backup ou restore, roda apenas em um sentido e sobre escreve
  # mesmo se a data de criação for mais recente
  elif [ $act == "bkp" ]; then
    rsync -av $opt $src/ $dest/
  elif [ $act == "rest" ]; then
    rsync -av $opt $dest/$src/ $src/
  fi
}


while [ 0 -lt $# ]; do
  case $1 in
    
    # Configura a transferência
    -bkp) act="bkp";;
    -rest) act="rest";;
    -sync) act="sync";;
    
    -dest) shift; dest="$1";;
    -src) shift; src="$1";;
    
    -file) shift; file="$1";;
    
    -tp) 
		case $2 in
		  comp) tp="comp"; shift;;
		  dif) tp="dif"; shift;;
		  tot) tp="tot"; shift;;
		  *) echo "Voce deve selecionar comp (complemental), dif (diferencial) ou tot (total)"; exit 2;;
		esac ;;
	
    -rec) 
		case $2 in
		  s) rec="--recursive"; shift;;
		  n) rec="--dirs"; shift;;
		  *) echo "Erro, o parametro recursivo so aceita valores s (sim) ou n (nao)"; exit 3;;
		esac ;;

	
    #  Executa as ações possíveis: instalar o programa, listar os arquivos da pasta de destino
    # executar a transferência.

    -ls) cat "$(ls $dest/$src)";;
    -inst) inst;;
    -run) run;;
    
    *) echo "$1 nao e uma opcao valida."; exit 1;;
  esac
  shift
done
